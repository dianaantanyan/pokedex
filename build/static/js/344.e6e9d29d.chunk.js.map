{"version":3,"file":"static/js/344.e6e9d29d.chunk.js","mappings":"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","sources":["app/reducers/addPokemonToList.ts","components/CompareContainer.tsx","pages/Compare.tsx","sections/Wrapper.tsx"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { addDoc } from \"firebase/firestore\";\nimport { pokemonListRef } from \"../../utils/firebaseConfig\";\nimport { getUserPokemons } from \"./getUserPokemons\";\nimport { setToast } from \"../slices/AppSlice\";\nimport {\n  pokemonStatsType,\n  pokemonTypeInterface,\n  userPokemonsType,\n} from \"../../utils/types\";\nimport { RootState } from \"../store\";\n\nexport const addPokemonToList = createAsyncThunk(\n  \"pokemon/addPkemon\",\n  async (\n    pokemon: {\n      id: number;\n      name: string;\n      types: pokemonTypeInterface[] | string[];\n      stats?: pokemonStatsType[];\n    },\n    { getState, dispatch }\n  ) => {\n    try {\n      const {\n        app: { userInfo },\n        pokemon: { userPokemons },\n      } = getState() as RootState;\n      if (!userInfo?.email) {\n        return dispatch(\n          setToast(\"Please login in order to add pokemon to your collection.\")\n        );\n      }\n      const index = userPokemons.findIndex((userPokemon: userPokemonsType) => {\n        return userPokemon.name === pokemon.name;\n      });\n      if (index === -1) {\n        let types: string[] = [];\n        if (!pokemon.stats) {\n          pokemon.types.forEach((type: any) =>\n            types.push(Object.keys(type).toString())\n          );\n        } else {\n          types = pokemon.types as string[];\n        }\n        await addDoc(pokemonListRef, {\n          pokemon: { id: pokemon.id, name: pokemon.name, types },\n          email: userInfo.email,\n        });\n        await dispatch(getUserPokemons());\n        dispatch(setToast(`${pokemon.name} added to your collection.`));\n      } else {\n        dispatch(setToast(`${pokemon.name} already part of your collection.`));\n      }\n    } catch (err) {\n      console.log({ err });\n    }\n  }\n);\n","import React from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport { removeFromCompare } from \"../app/slices/PokemonSlice\";\nimport { useAppDispatch } from \"../app/hooks\";\nimport { addPokemonToList } from \"../app/reducers/addPokemonToList\";\nimport { pokemonTypes } from \"../utils\";\nimport { pokemonStatType, pokemonTypeInterface, userPokemonsType} from \"../utils/types\";\n\n\nfunction CompareContainer({\n  pokemon = undefined,\n  isEmpty = false,\n}: {\n  pokemon?: userPokemonsType;\n  isEmpty?: boolean;\n}) {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const createStatsArray = (\n    types: pokemonTypeInterface[],\n    statType: pokemonStatType\n  ) => {\n    const statsArray: { name: string; image: string }[] = [];\n    const statsSet = new Set<string>();\n    types.forEach((type: pokemonTypeInterface) => {\n      const key = Object.keys(type)[0];\n      type[key][statType].forEach((stat: string) => {\n        if (!statsSet.has(stat)) {\n          // @ts-ignore\n          statsArray.push({ name: stat, image: pokemonTypes[stat].image });\n          statsSet.add(stat);\n        }\n      });\n    });\n    return statsArray;\n  };\n\n  const getStats = () => {\n    return (\n      <>\n        <div className=\"pokemon-types\">\n          <h4 className=\"pokemon-type-title\">Strength</h4>\n          <div className=\"pokemon-type-icons\">\n            {createStatsArray(pokemon?.types!, \"strength\").map(\n              (stat: { image: string }) => (\n                <div className=\"pokemon-type\">\n                  <img src={stat.image} alt=\"\" className=\"pokemon-type-image\" />\n                </div>\n              )\n            )}\n          </div>\n        </div>\n        <div className=\"pokemon-types\">\n          <h4 className=\"pokemon-type-title\">Weakness</h4>\n          <div className=\"pokemon-type-icons\">\n            {createStatsArray(pokemon?.types!, \"weakness\").map(\n              (stat: { image: string }) => (\n                <div className=\"pokemon-type\">\n                  <img src={stat.image} alt=\"\" className=\"pokemon-type-image\" />\n                </div>\n              )\n            )}\n          </div>\n        </div>\n        <div className=\"pokemon-types\">\n          <h4 className=\"pokemon-type-title\">Resistance</h4>\n          <div className=\"pokemon-type-icons\">\n            {createStatsArray(pokemon?.types!, \"resistance\").map(\n              (stat: { image: string }) => (\n                <div className=\"pokemon-type\">\n                  <img src={stat.image} alt=\"\" className=\"pokemon-type-image\" />\n                </div>\n              )\n            )}\n          </div>\n        </div>\n        <div className=\"pokemon-types\">\n          <h4 className=\"pokemon-type-title\">Vulnerable</h4>\n          <div className=\"pokemon-type-icons\">\n            {createStatsArray(pokemon?.types!, \"vulnerable\").map(\n              (stat: { image: string }) => (\n                <div className=\"pokemon-type\">\n                  <img src={stat.image} alt=\"\" className=\"pokemon-type-image\" />\n                </div>\n              )\n            )}\n          </div>\n        </div>\n      </>\n    );\n  };\n  return (\n    <div className=\"compare-container\">\n      {isEmpty && (\n        <div className=\"empty\">\n          <button onClick={() => navigate(\"/search\")}>\n            <FaPlus />\n          </button>\n          <h3>Add Pokemon for Comparison</h3>\n        </div>\n      )}\n      {pokemon && (\n        <div className=\"compare-element\" key={pokemon?.id}>\n          <div className=\"compare-info\">\n            <div className=\"compare-details\">\n              <h3>{pokemon?.name}</h3>\n              <img\n                src={pokemon?.image}\n                alt=\"pokemon\"\n                className=\"compare-image\"\n              />\n            </div>\n            <div className=\"pokemon-types-container\">\n              <div className=\"pokemon-types\">\n                <h4 className=\"pokemon-type-title\">Type</h4>\n                <div className=\"pokemon-type-icons\">\n                  {pokemon?.types.map((type: pokemonTypeInterface) => {\n                    const keys = Object.keys(type);\n                    return (\n                      <div className=\"pokemon-type\">\n                        <img\n                          src={type[keys[0]].image}\n                          alt=\"pokemon type\"\n                          className=\"pokemon-type-image\"\n                          loading=\"lazy\"\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n              {getStats()}\n            </div>\n          </div>\n          <div className=\"compare-action-buttons\">\n            <button\n              className=\"compare-btn\"\n              onClick={() => {\n                dispatch(addPokemonToList(pokemon));\n              }}\n            >\n              Add\n            </button>\n            <button\n              className=\"compare-btn\"\n              onClick={() => navigate(`/pokemon/${pokemon?.id}`)}\n            >\n              View\n            </button>\n            <button\n              className=\"compare-btn\"\n              onClick={() => dispatch(removeFromCompare({ id: pokemon?.id }))}\n            >\n              Remove\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CompareContainer;\n","import React from \"react\";\nimport Wrapper from \"../sections/Wrapper\";\nimport CompareContainer from \"../components/CompareContainer\";\nimport { useAppSelector } from \"../app/hooks\";\n\nfunction Compare() {\n  const { compareQueue } = useAppSelector(({ pokemon }) => pokemon);\n  return (\n    <div className=\"compare\">\n      <CompareContainer\n        pokemon={compareQueue[0]}\n        isEmpty={compareQueue.length < 1}\n      />\n      <CompareContainer\n        pokemon={compareQueue[1]}\n        isEmpty={compareQueue.length < 2}\n      />\n    </div>\n  );\n}\n\nexport default Wrapper(Compare);\n","import React from \"react\";\n\nconst Wrapper = (Component: React.FC) => () => {\n  return (\n    <div className=\"content\">\n      <Component />\n    </div>\n  );\n};\n\nexport default Wrapper;\n"],"names":["addPokemonToList","createAsyncThunk","async","pokemon","_ref","getState","dispatch","app","userInfo","userPokemons","email","setToast","findIndex","userPokemon","name","types","stats","forEach","type","push","Object","keys","toString","addDoc","pokemonListRef","id","getUserPokemons","concat","err","console","log","isEmpty","navigate","useNavigate","useAppDispatch","createStatsArray","statType","statsArray","statsSet","Set","stat","has","image","pokemonTypes","add","_jsxs","className","children","_jsx","onClick","FaPlus","src","alt","map","loading","_Fragment","removeFromCompare","Wrapper","compareQueue","useAppSelector","CompareContainer","length","Component"],"sourceRoot":""}